# Generated by Django 4.0.4 on 2022-05-03 04:24

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='SystemUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
            ],
            options={
                'verbose_name': '사용자',
                'verbose_name_plural': '사용자 목록',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='생성 일시')),
                ('name', models.CharField(db_index=True, max_length=20, unique=True, verbose_name='그룹명')),
                ('manager', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='managing_groups', to=settings.AUTH_USER_MODEL, verbose_name='그룹 관리자')),
            ],
            options={
                'verbose_name': '그룹',
                'verbose_name_plural': '그룹 목록',
            },
        ),
        migrations.CreateModel(
            name='PermissionTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body', models.CharField(max_length=10)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='registered_permission_tags', to='users.group', verbose_name='대상 그룹')),
            ],
        ),
        migrations.CreateModel(
            name='MemberInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='가입 일시')),
                ('nickname', models.CharField(max_length=30, verbose_name='닉네임')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='member_infos', to='users.group', verbose_name='대상 그룹')),
                ('permission_tags', models.ManyToManyField(db_index=True, related_name='permissions', to='users.permissiontag', verbose_name='권한 목록')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='group_infos', to=settings.AUTH_USER_MODEL, verbose_name='대상 유저')),
            ],
            options={
                'verbose_name': '그룹 내 사용자 정보',
                'verbose_name_plural': '그룹 내 사용자 정보 목록',
            },
        ),
        migrations.CreateModel(
            name='Block',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='생성 일시')),
                ('dt_from', models.DateTimeField(verbose_name='제한 시작 일시')),
                ('dt_to', models.DateTimeField(verbose_name='제한 해제 일시')),
                ('member_info', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blocks', to='users.memberinfo', verbose_name='대상 멤버 정보')),
            ],
            options={
                'verbose_name': '제한 내역',
                'verbose_name_plural': '제한 내역',
            },
        ),
        migrations.AddConstraint(
            model_name='memberinfo',
            constraint=models.UniqueConstraint(fields=('group', 'nickname'), name='unique nicknames'),
        ),
        migrations.AddConstraint(
            model_name='block',
            constraint=models.CheckConstraint(check=models.Q('dt_from__lt=dt_to'), name='period check'),
        ),
    ]
